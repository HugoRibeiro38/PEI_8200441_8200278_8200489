<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="https://www.NCar.com/reservations.xsd"
           targetNamespace="https://www.NCar.com/reservations.xsd"
           xmlns:c="http://www.NCar.com/commonTypes.xsd"
           elementFormDefault="qualified">

<xs:import schemaLocation="commonTypes.xsd" namespace="http://www.NCar.com/commonTypes.xsd"></xs:import>


<xs:element name="reservations">
    <xs:complexType>
        <xs:all>
            <xs:element name="reservation" type="reservationType" minOccurs="1"/>
        </xs:all>
    </xs:complexType>
</xs:element>

<!-- ComplexType Reservation -->
<xs:complexType name="reservationType">
        <xs:all>
            <xs:element name="code" type="c:codeType"/>
            <xs:element name="startDate" type="c:dateType"/><!-- Atributo adicional -->
            <xs:element name="endDate" type="c:dateType"/><!-- Atributo adicional -->
            <xs:element name="address" type="addressType"/>
            <xs:element name = "vehicleInfo" type="infoVehicleType"/>
            <xs:element name="typeOfContact" type="contactOf"/>
        </xs:all>
    </xs:complexType>
    
    
    
                   <!-- Tipo complexo para Tipo de contacto -->
    <!-- ao instanciarmos em XML usamos ou elemento Cliente para dizer que 
    o contacto é com o cliente dando respetiva Info e RepairShop para o caso de ser uma Oficina-->
    
    
    <xs:complexType name="contactOf">
        <xs:choice>
            <xs:element name="client" type="clientType"/>
            <xs:element name="RepairShop" type="repairShopType"/>
        </xs:choice>
    </xs:complexType>
    
    <!-- No caso de o contacto ser com o cliente é fornecida a respetiva Informação -->
    <xs:complexType name="clientType">
        <xs:all>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="property" type="propertyType"/>
        </xs:all>
    </xs:complexType>
    
    <!-- ComplextType para o caso de o contacto ser com a Oficina -->
    <xs:complexType name="repairShopType">
        <xs:all>
            <xs:element name="establishmentName" type="xs:string"/>
        </xs:all>
    </xs:complexType>
    
    <!-- SimpleType para restringir se o cliente é dono ou não do carro -->
    <xs:simpleType name="propertyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Owner"/>
            <xs:enumeration value="Not Owner"/>
        </xs:restriction>
    </xs:simpleType>
    

<!-- ComplexType for Address -->
  <xs:complexType name="addressType">
    <xs:sequence>
        <xs:element name = "street" type="c:streetAddressType"/>
        <xs:element name = "numDoor" type="c:numDoorType"/>
        <xs:element name = "zipCode" type="c:zipCodeType"/>
        <xs:element name = "city" type="c:cityType"/>
        <xs:element name = "coordinates" type="coordinatesType" />
    </xs:sequence>
</xs:complexType>

<!-- ComplexType for Coordinates -->
<xs:complexType name="coordinatesType">
        <xs:sequence>
            <xs:element name = "latitude" type="c:latitudeType"/>
            <xs:element name = "longitude" type="c:longitudeType"/>
        </xs:sequence>
    </xs:complexType>
    
    
    <!-- ComplexType for VehicleInfo -->
    
    <xs:complexType name="infoVehicleType">
        <xs:sequence>
            <xs:element name="brand" type="xs:string"/>
            <xs:element name ="model" type="xs:string"/>
            <xs:element name="fuel" type="c:fuelType"/>
            <xs:element name="transmission" type="c:gearsType"/>
            <xs:element name="year" type="xs:positiveInteger"/>
            <xs:element name = "horsePower" type="xs:positiveInteger"/>
        </xs:sequence>
    </xs:complexType>
   
</xs:schema>
